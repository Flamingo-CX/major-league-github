apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: ${FRONTEND_REPLICAS}
  selector:
    matchLabels:
      app: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: frontend
    spec:
      imagePullSecrets:
        - name: registry-credentials
      containers:
        - name: frontend
          image: ${REGISTRY}/${REGISTRY_NAME}/frontend:${VERSION}
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: app-config
          ports:
            - containerPort: 80
              name: http
          resources:
            requests:
              memory: ${FRONTEND_REQUEST_MEMORY}
              cpu: ${FRONTEND_REQUEST_CPU}
            limits:
              memory: ${FRONTEND_LIMIT_MEMORY}
              cpu: ${FRONTEND_LIMIT_CPU}
          startupProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 3
            failureThreshold: 3 

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: http
  type: ClusterIP 